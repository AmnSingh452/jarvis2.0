generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Shop {
  id            Int           @id @default(autoincrement())
  shopDomain    String        @unique
  accessToken   String?
  installedAt   DateTime      @default(now())
  uninstalledAt DateTime?
  isActive      Boolean       @default(true)
  tokenVersion  Int           @default(1)
  subscription  Subscription?

  @@index([shopDomain, isActive])
}

model InstallationLog {
  id         Int      @id @default(autoincrement())
  shopDomain String
  action     String
  timestamp  DateTime @default(now())
  metadata   Json?

  @@index([shopDomain, timestamp])
}

model WidgetSettings {
  id                  Int      @id @default(autoincrement())
  shopDomain          String   @unique
  primaryColor        String   @default("#007bff")
  secondaryColor      String   @default("#0056b3")
  buttonSize          String   @default("60px")
  position            String   @default("bottom-right")
  buttonIcon          String   @default("ðŸ’¬")
  windowWidth         String   @default("320px")
  windowHeight        String   @default("420px")
  headerText          String   @default("Jarvis AI Chatbot")
  placeholderText     String   @default("Type your message...")
  welcomeMessage      String   @default("Hello! How can I assist you today?")
  showTypingIndicator Boolean  @default(true)
  enableSounds        Boolean  @default(false)
  autoOpen            Boolean  @default(false)
  customCSS           String?
  isEnabled           Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([shopDomain])
}

model Plan {
  id            String         @id @default(cuid())
  name          String         @unique
  price         Decimal
  billingCycle  String
  messagesLimit Int
  features      Json
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
}

model Subscription {
  id                 String    @id @default(cuid())
  shopDomain         String    @unique
  planId             String
  status             String
  billingCycle       String
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  trialEndsAt        DateTime?
  cancelledAt        DateTime?
  shopifyChargeId    String?   @unique
  shopifyPlanId      String?
  confirmationUrl    String?
  messagesUsed       Int       @default(0)
  messagesLimit      Int       @default(1000)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  payments           Payment[]
  plan               Plan      @relation(fields: [planId], references: [id])
  shop               Shop      @relation(fields: [shopDomain], references: [shopDomain])

  @@index([shopDomain, status])
}

model Payment {
  id             String       @id @default(cuid())
  subscriptionId String
  amount         Decimal
  currency       String       @default("USD")
  status         String
  paymentMethod  String
  transactionId  String?      @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])

  @@index([subscriptionId, status])
}

// Analytics Models
model ChatConversation {
  id                String           @id @default(cuid())
  shopDomain        String
  sessionId         String?
  customerIp        String?
  customerName      String?
  startTime         DateTime         @default(now())
  endTime           DateTime?
  totalMessages     Int              @default(0)
  customerSatisfaction Float?        // 1-5 rating
  converted         Boolean          @default(false)
  conversionValue   Decimal?
  topic             String?
  status            String           @default("active") // active, completed, abandoned
  chatMessages      ChatMessage[]
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  @@index([shopDomain, startTime])
  @@index([shopDomain, converted])
}

model ChatMessage {
  id             String           @id @default(cuid())
  conversationId String
  role           String           // user, assistant, system
  content        String
  timestamp      DateTime         @default(now())
  responseTime   Float?           // Response time in seconds
  conversation   ChatConversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId, timestamp])
}

model AnalyticsMetrics {
  id                   String   @id @default(cuid())
  shopDomain           String
  date                 DateTime // Date for daily aggregation
  totalConversations   Int      @default(0)
  uniqueVisitors       Int      @default(0)
  totalMessages        Int      @default(0)
  averageResponseTime  Float?   // Average response time in seconds
  conversions          Int      @default(0)
  revenue              Decimal  @default(0)
  customerSatisfaction Float?   // Average satisfaction score
  topQuestions         Json?    // JSON array of frequently asked questions
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@unique([shopDomain, date])
  @@index([shopDomain, date])
}
